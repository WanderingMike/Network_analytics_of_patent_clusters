/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  assignee_df[assignee_df['ID'] == node[0]]['impact'] = impact
/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py:112: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  assignee_df[assignee_df['ID'] == node[0]]['normalised impact'] = impact/length
/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  assignee_df[assignee_df['ID'] == node]['influence'] = centrality_measure
/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py:111: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  assignee_df[assignee_df['ID'] == node[0]]['impact'] = impact
/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py:112: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  assignee_df[assignee_df['ID'] == node[0]]['normalised impact'] = impact/length
/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py:119: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  assignee_df[assignee_df['ID'] == node]['influence'] = centrality_measure
Traceback (most recent call last):
  File "main.py", line 125, in <module>
    managerial_layer()
  File "main.py", line 121, in managerial_layer
    unfold_network(cpc_time_series, tensors, topical_patents[:2]) 
  File "/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py", line 148, in unfold_network
    assignee_df = network_indices(cpc_nodes, assignee_nodes, edges, assignee_df)
  File "/cluster/raid/home/michael.tsesmelis/SideProject/network_analysis.py", line 116, in network_indices
    centrality = nx.eigenvector_centrality(network, weight="weight", max_iter=10000)
  File "<class 'networkx.utils.decorators.argmap'> compilation 4", line 4, in argmap_eigenvector_centrality_1
  File "/cluster/raid/home/michael.tsesmelis/SideProject/lib/python3.8/site-packages/networkx/algorithms/centrality/eigenvector.py", line 107, in eigenvector_centrality
    raise nx.NetworkXPointlessConcept(
networkx.exception.NetworkXPointlessConcept: cannot compute centrality for the null graph
